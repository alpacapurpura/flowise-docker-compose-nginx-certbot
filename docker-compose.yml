version: '3.8'

services:
    flowise:
        image: flowiseai/flowise:latest
        container_name: flowise
        restart: unless-stopped
        environment:
            - PORT=${FLOWISE_PORT}
            - DATABASE_PATH=${FLOWISE_DATABASE_PATH}
            - APIKEY_PATH=${FLOWISE_APIKEY_PATH}
            - DEBUG=${FLOWISE_DEBUG}
            - EXECUTION_MODE=${FLOWISE_EXECUTION_MODE}
            - FLOWISE_USERNAME=${FLOWISE_USERNAME}
            - FLOWISE_PASSWORD=${FLOWISE_PASSWORD}
            - SECRETKEY_OVERWRITE=${FLOWISE_SECRET_KEY}
        volumes:
            - ${FLOWISE_DATA_PATH}:/root/.flowise
        networks:
            - flowise-network

    nginx:
        image: nginx:alpine
        container_name: nginx
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        environment:
            - NGINX_DOMAIN=${NGINX_DOMAIN}
        volumes:
            - ./nginx/conf.d:/etc/nginx/conf.d
            - ./nginx/ssl:/etc/letsencrypt
            - ./nginx/www:/var/www/certbot
            - ./nginx/init.sh:/docker-entrypoint.d/40-init-nginx.sh
        depends_on:
            - flowise
        networks:
            - flowise-network

    certbot:
        image: certbot/certbot
        container_name: certbot
        environment:
            - NGINX_DOMAIN=${NGINX_DOMAIN}
        volumes:
            - ./nginx/ssl:/etc/letsencrypt
            - ./nginx/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
        networks:
            - flowise-network

networks:
    flowise-network:
        driver: bridge